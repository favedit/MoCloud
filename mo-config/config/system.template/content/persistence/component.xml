<?xml version="1.0" encoding="UTF-8"?>
<Template _uuid="F0gMSJ8csfCQztB7hfP3tg" name="eng.persistence.xmlobject" is_valid="Y" note="M#">
  <Define _uuid="vke9WDo8Pe6XGc2PgMXclA" name="package" is_valid="Y" note="M#" value="org.mobj.mylife.data.base" />
  <Source _uuid="fUbHjVep9[tdB6xKnW30rA" is_valid="Y" note="M#"><![CDATA[package <jt:item source='$component.class' format='class.package'/>;

import org.mo.com.lang.face.AName;
import org.mo.cloud.content.design.configuration.AContentField;
import org.mo.cloud.content.design.configuration.EContentData;
import org.mo.cloud.content.design.configuration.FContentField;
import org.mo.cloud.content.design.configuration.XContentObject;

//============================================================
// <T><jt:item source='$component.label'/>对象的内容基类。</T>
//
// @author autosource
//============================================================
public abstract class <jt:item source='$component.class' format='class.name'/> extends XContentObject
{
   // 类名称
   public static final String CONTENT_NAME = "<jt:item source='$component.name'/>";

<jt:loop source='$attributes' order='asc' alias='attribute'>
   // <jt:item source="$attribute.label"/>的定义
   @AContentField
   public final static FContentField <jt:item source='$attribute.name' format='upper'/> = new FContentField("<jt:item source='$attribute.name' format='method'/>", "<jt:item source='$attribute.name' format='lower'/>", EContentData.<jt:item source='$attribute.type'/>, "<jt:item source='$attribute.data_group'/>", "<jt:item source='$attribute.data_code'/>", "<jt:item source='$attribute.data_default'/>", "<jt:item source='$attribute.is_store'/><jt:item source='$attribute.is_config'/><jt:item source='$attribute.is_abstract'/><jt:item source='$attribute.is_default'/>");

</jt:loop>
   //============================================================
   // <T>判断是否指定实例。</T>
   //
   // @param name 名称
   //============================================================
   public static boolean isInstance(String name){
      return NAME.equals(name);
   }

   //============================================================
   // <T>判断是否指定实例。</T>
   //
   // @param xinstance 实例
   //============================================================
   public static boolean isInstance(XContentObject xinstance){
      return NAME.equals(xinstance.contentClass().name());
   }

<jt:loop source='$attributes' order='asc' alias='attribute'>
<jt:false source='$attribute.is_abstract'>
   // <jt:item source="$attribute.label"/>
   @AName("<jt:item source='$attribute.name' format='lower'/>")
<jt:Equals source='$attribute.type' value="Boolean">
   protected boolean _<jt:item source='$attribute.name' format='method'/>;
</jt:Equals>
<jt:Equals source='$attribute.type' value="Date">
   protected TDateTime _<jt:item source='$attribute.name' format='method'/> = new TDateTime();
</jt:Equals>
<jt:Equals source='$attribute.type' value="String">
   protected String _<jt:item source='$attribute.name' format='method'/>;
</jt:Equals>
<jt:Equals source='$attribute.type' value="MultiString">
   protected TMultiString _<jt:item source='$attribute.name' format='method'/> = new TMultiString();
</jt:Equals>

</jt:false>
</jt:loop>
<jt:loop source='$attributes' order='asc' alias='attribute'>
<jt:true source='$attribute.is_abstract'>
   //============================================================
   // <T>获得<jt:item source="$attribute.label"/>的内容。</T>
   //
   // @return <jt:item source="$attribute.label"/>
   //============================================================
   public abstract <jt:item source="$attribute.type"/> get<jt:item format='class' source='$attribute.name'/>();

   //============================================================
   // <T>设置<jt:item source="$attribute.label"/>的内容。</T>
   //
   // @param value <jt:item source="$attribute.label"/>
   //============================================================
   public abstract void set<jt:item format='class' source='$attribute.name' />(<jt:item source="$attribute.type"/> value);

</jt:true>
<jt:false source='$attribute.is_abstract'>
   //============================================================
   // <T>获得<jt:item source="$attribute.label"/>的内容。</T>
   //
   // @return <jt:item source="$attribute.label"/>
   //============================================================
   public <jt:item source="$attribute.type"/> get<jt:item format='class' source='$attribute.name' />(){
      return _<jt:item source='$attribute.name' format='method'/>;
   }

   //============================================================
   // <T>设置<jt:item source="$attribute.label"/>的内容。</T>
   //
   // @param value <jt:item source="$attribute.label"/>
   //============================================================
   public void set<jt:item format='class' source='$attribute.name' />(<jt:item source="$attribute.type"/> value){
      _<jt:item source='$attribute.name' format='method'/> = value;
   }
</jt:false>

</jt:loop>
}]]></Source>
</Template>
