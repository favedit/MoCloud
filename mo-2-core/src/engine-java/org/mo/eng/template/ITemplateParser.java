package org.mo.eng.template;

import org.mo.com.lang.FString;
import org.mo.com.lang.IAttributes;

//============================================================
// <T>模板解析器接口。</T>
//============================================================
public interface ITemplateParser
{

   //============================================================
   // <T>获得模板控制台接口。</T>
   //
   // @return 模板控制台接口
   //============================================================
   ITemplateConsole console();

   //============================================================
   // <T>获得模板环境。</T>
   //
   // @return 模板环境
   //============================================================
   FTemplateContext context();

   //============================================================
   // <T>获得模板名称。</T>
   //
   // @return 模板名称
   //============================================================
   String templateName();

   //============================================================
   // <T>获得变量集合。</T>
   //
   // @return 变量集合
   //============================================================
   IAttributes variables();

   //============================================================
   // <T>接收解析器内容。</T>
   //
   // @param parser 解析器
   //============================================================
   void attach(ITemplateParser parser);

   //============================================================
   // <T>定义内容。</T>
   //
   // @param name 名称
   // @param value 内容
   //============================================================
   void define(String name,
               Object value);

   //============================================================
   // <T>解析一个部分内的所有内容。</T>
   //
   // @param part 部分名称
   // @return 内容
   //============================================================
   FString parse(String part);

   //============================================================
   // <T>解析默认部分内的所有内容。</T>
   //
   // @return 内容
   //============================================================
   FString parse();

   //============================================================
   // <T>重置处理。</T>
   //============================================================
   void reset();
}
