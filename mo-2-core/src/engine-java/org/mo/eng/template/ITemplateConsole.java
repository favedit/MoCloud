package org.mo.eng.template;

import org.mo.com.xml.FXmlNode;
import org.mo.eng.template.tag.ITplTag;

//============================================================
// <T>模板控制台接口。</T>
//============================================================
public interface ITemplateConsole
{
   //============================================================
   // <T>根据名称创建标签。</T>
   //
   // @param name 名称
   // @return 标签
   //============================================================
   ITplTag createTag(String name);

   //============================================================
   // <T>根据来源查找模板。</T>
   //
   // @param source 来源
   // @return 模板
   //============================================================
   FXmlNode findTemplate(String source);

   //============================================================
   // <T>根据路径和名称查找模板。</T>
   //
   // @param path 路径
   // @param name 名称
   // @return 模板
   //============================================================
   FXmlNode findTemplate(String path,
                         String name);

   //============================================================
   // <T>根据来源查找解析器。</T>
   //
   // @param source 来源
   // @return 解析器
   //============================================================
   ITemplateParser findParser(String source);

   //============================================================
   // <T>根据路径和名称查找解析器。</T>
   //
   // @param path 路径
   // @param name 名称
   // @return 解析器
   //============================================================
   ITemplateParser findParser(String path,
                              String name);

   //============================================================
   // <T>根据来源获得解析器。</T>
   //
   // @param source 来源
   // @return 解析器
   //============================================================
   ITemplateParser getParser(String source);

   //============================================================
   // <T>根据路径和名称获得解析器。</T>
   //
   // @param path 路径
   // @param name 名称
   // @return 解析器
   //============================================================
   ITemplateParser getParser(String path,
                             String name);
}
