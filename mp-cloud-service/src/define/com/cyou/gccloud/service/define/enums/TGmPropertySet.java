//============================================================
// <T>属性类型。</T>
//
// @version 1.0.1
//============================================================
package com.cyou.gccloud.service.define.enums;

import org.mo.com.xml.*;

//============================================================
// <T>属性类型枚举定义。</T>
//
// @enum
//============================================================
public class TGmPropertySet
{
   // 数据内容
   protected int value;

   //============================================================
   // <T>获得未知标志位。</T>
   //============================================================
   public boolean unknown(){
      return 0 != (value & (1 << 0));
   }

   //============================================================
   // <T>设置未知标志位。</T>
   //============================================================
   public void setUnknown(boolean flag){
      int mask = (1 << 0);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得当前生命标志位。</T>
   //============================================================
   public boolean hpCurrent(){
      return 0 != (value & (1 << 1));
   }

   //============================================================
   // <T>设置当前生命标志位。</T>
   //============================================================
   public void setHpCurrent(boolean flag){
      int mask = (1 << 1);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得最大生命标志位。</T>
   //============================================================
   public boolean hpMax(){
      return 0 != (value & (1 << 2));
   }

   //============================================================
   // <T>设置最大生命标志位。</T>
   //============================================================
   public void setHpMax(boolean flag){
      int mask = (1 << 2);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得当前魔法标志位。</T>
   //============================================================
   public boolean mpCurrent(){
      return 0 != (value & (1 << 3));
   }

   //============================================================
   // <T>设置当前魔法标志位。</T>
   //============================================================
   public void setMpCurrent(boolean flag){
      int mask = (1 << 3);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得最大魔法标志位。</T>
   //============================================================
   public boolean mpMax(){
      return 0 != (value & (1 << 4));
   }

   //============================================================
   // <T>设置最大魔法标志位。</T>
   //============================================================
   public void setMpMax(boolean flag){
      int mask = (1 << 4);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得物防标志位。</T>
   //============================================================
   public boolean defencePhysical(){
      return 0 != (value & (1 << 5));
   }

   //============================================================
   // <T>设置物防标志位。</T>
   //============================================================
   public void setDefencePhysical(boolean flag){
      int mask = (1 << 5);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得法防标志位。</T>
   //============================================================
   public boolean defenceMagic(){
      return 0 != (value & (1 << 6));
   }

   //============================================================
   // <T>设置法防标志位。</T>
   //============================================================
   public void setDefenceMagic(boolean flag){
      int mask = (1 << 6);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得物攻标志位。</T>
   //============================================================
   public boolean attackPhysical(){
      return 0 != (value & (1 << 7));
   }

   //============================================================
   // <T>设置物攻标志位。</T>
   //============================================================
   public void setAttackPhysical(boolean flag){
      int mask = (1 << 7);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得法攻标志位。</T>
   //============================================================
   public boolean attackMagic(){
      return 0 != (value & (1 << 8));
   }

   //============================================================
   // <T>设置法攻标志位。</T>
   //============================================================
   public void setAttackMagic(boolean flag){
      int mask = (1 << 8);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得精准标志位。</T>
   //============================================================
   public boolean hit(){
      return 0 != (value & (1 << 9));
   }

   //============================================================
   // <T>设置精准标志位。</T>
   //============================================================
   public void setHit(boolean flag){
      int mask = (1 << 9);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得躲闪标志位。</T>
   //============================================================
   public boolean dodge(){
      return 0 != (value & (1 << 10));
   }

   //============================================================
   // <T>设置躲闪标志位。</T>
   //============================================================
   public void setDodge(boolean flag){
      int mask = (1 << 10);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得体质标志位。</T>
   //============================================================
   public boolean vitality(){
      return 0 != (value & (1 << 11));
   }

   //============================================================
   // <T>设置体质标志位。</T>
   //============================================================
   public void setVitality(boolean flag){
      int mask = (1 << 11);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得魔力标志位。</T>
   //============================================================
   public boolean magic(){
      return 0 != (value & (1 << 12));
   }

   //============================================================
   // <T>设置魔力标志位。</T>
   //============================================================
   public void setMagic(boolean flag){
      int mask = (1 << 12);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得力量标志位。</T>
   //============================================================
   public boolean strength(){
      return 0 != (value & (1 << 13));
   }

   //============================================================
   // <T>设置力量标志位。</T>
   //============================================================
   public void setStrength(boolean flag){
      int mask = (1 << 13);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得耐力标志位。</T>
   //============================================================
   public boolean stamina(){
      return 0 != (value & (1 << 14));
   }

   //============================================================
   // <T>设置耐力标志位。</T>
   //============================================================
   public void setStamina(boolean flag){
      int mask = (1 << 14);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得敏捷标志位。</T>
   //============================================================
   public boolean agile(){
      return 0 != (value & (1 << 15));
   }

   //============================================================
   // <T>设置敏捷标志位。</T>
   //============================================================
   public void setAgile(boolean flag){
      int mask = (1 << 15);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得行动值标志位。</T>
   //============================================================
   public boolean mobility(){
      return 0 != (value & (1 << 16));
   }

   //============================================================
   // <T>设置行动值标志位。</T>
   //============================================================
   public void setMobility(boolean flag){
      int mask = (1 << 16);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得经验标志位。</T>
   //============================================================
   public boolean experience(){
      return 0 != (value & (1 << 17));
   }

   //============================================================
   // <T>设置经验标志位。</T>
   //============================================================
   public void setExperience(boolean flag){
      int mask = (1 << 17);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得等级标志位。</T>
   //============================================================
   public boolean level(){
      return 0 != (value & (1 << 18));
   }

   //============================================================
   // <T>设置等级标志位。</T>
   //============================================================
   public void setLevel(boolean flag){
      int mask = (1 << 18);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得忠诚标志位。</T>
   //============================================================
   public boolean fidelity(){
      return 0 != (value & (1 << 19));
   }

   //============================================================
   // <T>设置忠诚标志位。</T>
   //============================================================
   public void setFidelity(boolean flag){
      int mask = (1 << 19);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得寿命标志位。</T>
   //============================================================
   public boolean life(){
      return 0 != (value & (1 << 20));
   }

   //============================================================
   // <T>设置寿命标志位。</T>
   //============================================================
   public void setLife(boolean flag){
      int mask = (1 << 20);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得物攻资质标志位。</T>
   //============================================================
   public boolean itgAttackPhysical(){
      return 0 != (value & (1 << 21));
   }

   //============================================================
   // <T>设置物攻资质标志位。</T>
   //============================================================
   public void setItgAttackPhysical(boolean flag){
      int mask = (1 << 21);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得物防资质标志位。</T>
   //============================================================
   public boolean itgDefencePhysical(){
      return 0 != (value & (1 << 22));
   }

   //============================================================
   // <T>设置物防资质标志位。</T>
   //============================================================
   public void setItgDefencePhysical(boolean flag){
      int mask = (1 << 22);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得气血资质标志位。</T>
   //============================================================
   public boolean itgHp(){
      return 0 != (value & (1 << 23));
   }

   //============================================================
   // <T>设置气血资质标志位。</T>
   //============================================================
   public void setItgHp(boolean flag){
      int mask = (1 << 23);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得法力资质标志位。</T>
   //============================================================
   public boolean itgMagic(){
      return 0 != (value & (1 << 24));
   }

   //============================================================
   // <T>设置法力资质标志位。</T>
   //============================================================
   public void setItgMagic(boolean flag){
      int mask = (1 << 24);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得速度资质标志位。</T>
   //============================================================
   public boolean itgMobility(){
      return 0 != (value & (1 << 25));
   }

   //============================================================
   // <T>设置速度资质标志位。</T>
   //============================================================
   public void setItgMobility(boolean flag){
      int mask = (1 << 25);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得躲闪资质标志位。</T>
   //============================================================
   public boolean itgDodge(){
      return 0 != (value & (1 << 26));
   }

   //============================================================
   // <T>设置躲闪资质标志位。</T>
   //============================================================
   public void setItgDodge(boolean flag){
      int mask = (1 << 26);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得好友标志位。</T>
   //============================================================
   public boolean friend(){
      return 0 != (value & (1 << 27));
   }

   //============================================================
   // <T>设置好友标志位。</T>
   //============================================================
   public void setFriend(boolean flag){
      int mask = (1 << 27);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得组队状态标志位。</T>
   //============================================================
   public boolean teamStatic(){
      return 0 != (value & (1 << 28));
   }

   //============================================================
   // <T>设置组队状态标志位。</T>
   //============================================================
   public void setTeamStatic(boolean flag){
      int mask = (1 << 28);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>获得怒气值标志位。</T>
   //============================================================
   public boolean ap(){
      return 0 != (value & (1 << 29));
   }

   //============================================================
   // <T>设置怒气值标志位。</T>
   //============================================================
   public void setAp(boolean flag){
      int mask = (1 << 29);
      if(flag){
         value |= mask;
      }else{
         value &= ~mask;
      }
   }

   //============================================================
   // <T>接收对象内容。</T>
   //
   // @param object 对象
   //============================================================
   public void assign(TGmPropertySet set){
      value = set.value;
   }

  //============================================================
   // <T>序列化数据部分到输入流中。</T>
   //
   // @param output 输入流
   //============================================================
   public void saveConfig(FXmlNode xconfig){
      //output.writeUint32(value);
   }

   //============================================================
   // <T>从输出流中反序列化数据部分。</T>
   //
   // @param input 输出流
   //============================================================
   public void loadConfig(FXmlNode xconfig){
      //value = xconfig.get("Uint32");
   }

   //============================================================
   // <T>重置内容。</T>
   //============================================================
   public void reset(){
      value = 0;
   }
}
