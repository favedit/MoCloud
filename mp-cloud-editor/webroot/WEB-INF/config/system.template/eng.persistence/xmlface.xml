<?xml version="1.0" encoding="UTF-8"?>
<Template _uuid="r0UtvQ608yheKfDsKw4Lgg" name="eng.persistence.xmlface" is_valid="Y" note="M#">
  <Define _uuid="G0[iaeMoYtr9YxGBOdL]uQ" name="package" is_valid="Y" note="M#" value="org.mobj.mylife.data.base" />
  <Source _uuid="1ERc8vfLkC8enNRixfdouA" is_valid="Y" note="M#"><![CDATA[/*
 * @(#)<jt:Item source='$interface.class_name' format='class.name'/>.java
 *
 * Copyright 2008 microbject, All Rights Reserved.
 *
 */
package <jt:Item source='$interface.class' format='class.package'/>;

import org.mobj.com.lang.FMultiString;
import org.mobj.com.lang.RBoolean;
import org.mobj.com.lang.RString;
import org.mobj.com.lang.face.AName;
import org.mobj.com.xml.EXmlConfig;
import org.mobj.com.xml.FXmlNode;
import org.mobj.com.xml.FXmlObject;
import org.mobj.com.xml.IXmlObject;

/**
 * <p><jt:Item source='$interface.label'/>对象的XML节点基类</p>
 *
 * @author system
 */
public interface <jt:Item source='$interface.class_name' format='class.name'/> extends FXmlObject{

   private static final long serialVersionUID = 1L;

   public static final String NAME = "<jt:Item source='$interface.name'/>";

   public static boolean isName(String name){
      return NAME.equals(name);
   }

   public static boolean isInstance(IXmlObject xobject){
      return NAME.equals(xobject.name());
   }

<jt:Loop source='$attributes' order='asc' alias='attribute'>
   /**
    * <jt:Item source="$attribute.label"/>的名称定义
    */
   String PTY_<jt:Item format='upper' source='$attribute.name'/> = "<jt:Item source='$attribute.name'/>";

</jt:Loop>

   public String name(){
      return NAME;
   }

<jt:Loop source='$attributes' order='asc' alias='attribute'>
<jt:True source='$attribute.is_abstract'>
   /**
    * 获得<jt:Item source="$attribute.label"/>的内容。
    *
    * @return <jt:Item source="$attribute.label"/>
    */
   public abstract <jt:Item source="$attribute.type"/> get<jt:Item format='class' source='$attribute.name' />();

   /**
    * 设置<jt:Item source="$attribute.label"/>的内容。
    *
    * @param value <jt:Item source="$attribute.label"/>
    */
   public abstract void set<jt:Item format='class' source='$attribute.name' />(<jt:Item source="$attribute.type"/> value);

</jt:True>
<jt:False source='$attribute.is_abstract'>
<jt:Equals source='$attribute.type' value="MultiString">
   /**
    * 获得<jt:Item source="$attribute.label"/>的内容。
    *
    * @return <jt:Item source="$attribute.label"/>
    */
   public String get<jt:Item format='class' source='$attribute.name' />(){
      return _<jt:Item source='$attribute.name' format='method'/>.get();
   }

   /**
    * 设置<jt:Item source="$attribute.label"/>的内容。
    *
    * @param value <jt:Item source="$attribute.label"/>
    */
   public void set<jt:Item format='class' source='$attribute.name' />(String value){
      _<jt:Item source='$attribute.name' format='method'/>.set(value);
   }
</jt:Equals>
<jt:NotEquals source='$attribute.type' value="MultiString">
   /**
    * 获得<jt:Item source="$attribute.label"/>的内容。
    *
    * @return <jt:Item source="$attribute.label"/>
    */
   public <jt:Item source="$attribute.type"/> get<jt:Item format='class' source='$attribute.name' />(){
      return _<jt:Item source='$attribute.name' format='method'/>;
   }

   /**
    * 设置<jt:Item source="$attribute.label"/>的内容。
    *
    * @param value <jt:Item source="$attribute.label"/>
    */
   public void set<jt:Item format='class' source='$attribute.name' />(<jt:Item source="$attribute.type"/> value){
      _<jt:Item source='$attribute.name' format='method'/> = value;
   }
</jt:NotEquals>
</jt:False>

}]]></Source>
</Template>

