package org.mo.com.text.parser;

//============================================================
// <T>文本环境接口。</T>
//============================================================
public interface ITextContext
{
   //============================================================
   // <T>判断是否行分隔。</T>
   //
   // @param value 字符
   // @return 是否行分隔
   //============================================================
   boolean isLineSplitter(char value);

   //============================================================
   // <T>判断是否行注释。</T>
   //
   // @param line 文本行
   // @return 是否行注释
   //============================================================
   boolean isLineComment(String line);

   //============================================================
   // <T>判断是否块开始。</T>
   //
   // @param value 字符
   // @return 是否块开始
   //============================================================
   boolean isTokenBegin(char value);

   //============================================================
   // <T>判断是否块结束。</T>
   //
   // @param value 字符
   // @return 是否块结束
   //============================================================
   boolean isTokenEnd(char value);

   //============================================================
   // <T>判断是否分隔符。</T>
   //
   // @param value 字符
   // @return 是否分隔符
   //============================================================
   boolean isSplitter(char value);

   //============================================================
   // <T>获得所有文本行。</T>
   //
   // @return 文本行
   //============================================================
   FTextLines lines();
}
