package org.mo.com.xml;

import org.mo.com.lang.IAttributes;
import org.mo.com.lang.IObjectId;
import org.mo.com.lang.generic.IStringNamed;

//============================================================
// <T>XML对象的接口。</T>
//
// @author MAOCY
// @version 1.00 - 2008/12/08
//============================================================
public interface IXmlObject
      extends
         IStringNamed,
         IObjectId
{
   //============================================================
   // <T>判断当前节点下是否含有子节点信息。</T>
   //
   // @return 是否含有子节点
   //============================================================
   boolean hasChild();

   //============================================================
   // <T>获得子节点集合。</T>
   //
   // @param 子节点集合
   //============================================================
   IXmlObjects children();

   //============================================================
   // <T>查找当前节点下的子节点信息。</T>
   // <P>参数需要成对使用，第一个参数是属性名称，第二个参数是属性内容。</P>
   // <P>如果没有找到则返回空。</P>
   //
   // @param values 参数集合
   // @return 查找到的子节点
   //============================================================
   IXmlObject find(String... values);

   //============================================================
   // <T>获得当前节点下的属性内容。</T>
   //
   // @param name 属性名称
   // @return 属性内容
   //============================================================
   String innerGet(String name);

   //============================================================
   // <T>设置当前节点下的属性内容。</T>
   //
   // @param name 属性名称
   // @return 属性内容
   //============================================================
   void innerSet(String name,
                 String value);

   //============================================================
   // <T>获得当前节点下的节点内容。</T>
   //
   // @return 节点内容
   //============================================================
   String innerText();

   //============================================================
   // <T>设置当前节点下的节点内容。</T>
   //
   // @param innerText 节点内容
   //============================================================
   void setInnerText(String innerText);

   //============================================================
   // <T>根据当前唯一标识搜索父对象。</T>
   //
   // @param objectId 唯一标识
   // @return 父对象
   //============================================================
   IXmlObject searchParent(String objectId);

   //============================================================
   // <T>从当前的节点下搜索所有子节点中指定唯一标识的节点对象。</T>
   //
   // @param objectId 唯一标识
   // @return 节点对象
   //============================================================
   IXmlObject search(String objectId);

   //============================================================
   // <T>从当前的节点下搜索所有子节点中指定属性名称和内容的节点对象。</T>
   //
   // @param name 属性名称
   // @param value 属性内容
   // @return 节点对象
   //============================================================
   IXmlObject search(String name,
                     String value);

   //============================================================
   // <T>从当前的节点下搜索路径。</T>
   //
   // @param name 属性名称
   // @param path 路径
   // @param split 分割符
   // @return 节点对象
   //============================================================
   IXmlObject searchPath(String name,
                         String path,
                         char split);

   //============================================================
   // <T>从XML节点内加载设置信息。</T>
   //
   // @param config XML节点信息
   // @param typeCd 节点类型
   //============================================================
   void loadConfig(FXmlNode xconfig,
                   EXmlConfig typeCd);

   //============================================================
   // <T>存储设置信息到XML节点内。</T>
   //
   // @param config XML节点信息
   // @param typeCd 节点类型
   //============================================================
   void saveConfig(FXmlNode xconfig,
                   EXmlConfig typeCd);

   //============================================================
   // <T>获得当前节点的XML节点。</T>
   //
   // @param typeCd XML节点类型
   // @return XML节点
   //============================================================
   FXmlNode toNode(EXmlConfig typeCd);

   //============================================================
   // <T>获得当前节点的简单属性列表。</T>
   //
   // @return 属性列表
   //============================================================
   IAttributes toSimpleAttributes();

   //============================================================
   // <T>获得当前节点的简单XML节点。</T>
   //
   // @return XML节点
   //============================================================
   FXmlNode toSimpleNode();
}
