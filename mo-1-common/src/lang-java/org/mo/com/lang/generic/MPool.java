package org.mo.com.lang.generic;

//============================================================
// <T>对象缓冲池。</T>
//============================================================
public class MPool<T>
{
   // 使用链表
   protected MList<T> _useItems = new MList<>();

   // 自由链表
   protected MList<T> _freeItems = new MList<>();

   //============================================================
   // <T>链表对象缓冲池。</T>
   //============================================================   
   public MPool(){
   }

   //============================================================
   // <T>收集一个对象。</T>
   //
   // @return 对象
   //============================================================   
   public T alloc(){
      T item = null;
      if(!_freeItems.isEmpty()){
         item = _freeItems.pop();
         _useItems.push(item);
      }
      return item;
   }

   //============================================================
   // <T>释放一个对象。</T>
   //
   // @param item 对象
   //============================================================   
   public void free(T item){
      _useItems.remove(item);
      _freeItems.push(item);
   }
}
