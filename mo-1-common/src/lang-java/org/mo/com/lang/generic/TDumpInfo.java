package org.mo.com.lang.generic;

import org.mo.com.lang.EDumpLevel;

//============================================================
//<T>运行信息。</T>
//============================================================
public class TDumpInfo
      extends MString
{
   // 类型
   protected EDumpLevel _typeCd;

   // 实体
   protected Object _instance;

   // 级别
   protected int _level;

   //============================================================
   // <T>构造运行信息。</T>
   //============================================================
   public TDumpInfo(){
   }

   //============================================================
   // <T>构造运行信息。</T>
   //
   // @param instance 实例
   //============================================================
   public TDumpInfo(Object instance){
      _instance = instance;
   }

   //============================================================
   // <T>获得关联的类型。</T>
   //
   // @return 类型
   //============================================================
   public EDumpLevel typeCd(){
      return _typeCd;
   }

   //============================================================
   // <T>设置关联的类型。</T>
   //
   // @param typeCd 类型
   //============================================================
   public void setTypeCd(EDumpLevel typeCd){
      _typeCd = typeCd;
   }

   //============================================================
   // <T>获得关联的实例。</T>
   //
   // @return 实例
   //============================================================
   public Object instance(){
      return _instance;
   }

   //============================================================
   // <T>获得递归级别。</T>
   //
   // @return 递归级别
   //============================================================
   public int level(){
      return _level;
   }

   //============================================================
   // <T>增加递归级别。</T>
   //============================================================
   public void increaseLevel(Object instance){
      _instance = instance;
      _level++;
   }

   //============================================================
   // <T>减少递归级别。</T>
   //============================================================
   public void decreaseLevel(){
      _level--;
   }

   //============================================================
   // <T>追加迭代信息。</T>
   //============================================================
   public void appendIndent(){
      int n = -1;
      while(++n < _level){
         append("   ");
      }
   }
}
