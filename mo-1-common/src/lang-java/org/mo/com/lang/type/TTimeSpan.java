package org.mo.com.lang.type;

import org.mo.com.lang.RDateTime;

//============================================================
// <T>时间段数据类型。</T>
//
// @history 130221 创建
//============================================================
public class TTimeSpan
      extends MType
{
   // 存储内容
   protected long _value;

   //============================================================
   // <T>构造时间段数据类型。</T>
   //============================================================
   public TTimeSpan(){
   }

   //============================================================
   // <T>构造时间段数据类型。</T>
   //
   // @param value 时间段
   //============================================================
   public TTimeSpan(long value){
      _value = value;
   }

   //============================================================
   // <T>获得数据内容。</T>
   //
   // @return 数据内容
   //============================================================
   public long get(){
      return _value;
   }

   //============================================================
   // <T>设置数据内容。</T>
   //
   // @param value 数据内容
   //============================================================
   public void set(long value){
      _value = value;
   }

   //============================================================
   // <T>获取表示当前的整周数。</T>
   //
   // @return 此实例包含的整周数。返回值可以是正数也可以是负数。
   //============================================================
   public int weeks(){
      return (int)(_value / RDateTime.TicksPerWeek);
   }

   //============================================================
   // <T>获取表示当前的整天数。</T>
   //
   // @return 此实例包含的整天数。返回值可以是正数也可以是负数。
   //============================================================
   public int days(){
      return (int)(_value / RDateTime.TicksPerDay);
   }

   //============================================================
   // <T>获取表示当前的整小时数。</T>
   //
   // @return 此实例包含的整小时数。返回值的范围为 -23 到 23。
   //============================================================
   public int hours(){
      return (int)(_value / RDateTime.TicksPerHour) % 24;
   }

   //============================================================
   // <T>获取表示当前的整分钟数。</T>
   //
   // @return 此实例包含的整分钟数。返回值的范围为 0 到 59。
   //============================================================
   public int minutes(){
      return (int)(_value / RDateTime.TicksPerMinute) % 60;
   }

   //============================================================
   // <T>获取表示当前的整秒数。</T>
   //
   // @return 此实例包含的整秒数。
   //============================================================
   public int seconds(){
      return (int)(_value / RDateTime.TicksPerSecond);
   }

   //============================================================
   // <T>获取表示当前的整毫秒数。</T>
   //
   // @return 此实例包含的整毫秒数。返回值的范围为 -999 到 999。
   //============================================================
   public int milliseconds(){
      return (int)(_value % RDateTime.TicksPerSecond);
   }

   //============================================================
   // <T>获取以整天数和天的小数部分表示的当前的值。</T>
   //
   // @return 此实例表示的总天数。
   //============================================================
   public int totalDays(){
      return (int)(_value / RDateTime.TicksPerDay);
   }

   //============================================================
   // <T>获取以整小时数和小时的小数部分表示的当前的值。</T>
   //
   // @return 此实例表示的总小时数。
   //============================================================
   public int totalHours(){
      return (int)(_value / RDateTime.TicksPerHour);
   }

   //============================================================
   // <T>获取以整分钟数和分钟的小数部分表示的当前结构的值。</T>
   //
   // @return 此实例表示的总分钟数。
   //============================================================
   public int totalMinutes(){
      return (int)(_value / RDateTime.TicksPerMinute);
   }

   //============================================================
   // <T>获取以整毫秒数和毫秒的小数部分表示的当前的值。</T>
   //
   // @return 此实例表示的总毫秒数。
   //============================================================
   public long totalSeconds(){
      return _value / RDateTime.TicksPerSecond;
   }

   //============================================================
   // <T>获取以整秒数和秒的小数部分表示的当前的值。</T>
   //
   // @return 此实例表示的总秒数。
   //============================================================
   public long totalMilliseconds(){
      return _value;
   }
}
