package org.mo.com.lang.type;

import org.mo.com.lang.RBoolean;

//============================================================
// <T>布尔数据。</T>
//
// @history 130220 创建
//============================================================
public class TBoolean
      extends MType
{
   // 布尔值
   protected boolean _value;

   //============================================================
   // <T>构造布尔数据。</T>
   //============================================================
   public TBoolean(){
   }

   //============================================================
   // <T>构造布尔数据。</T>
   //
   // @param value 布尔值
   //============================================================
   public TBoolean(boolean value){
      _value = value;
   }

   //============================================================
   // <T>获得数据内容。</T>
   //
   // @return 布尔值
   //============================================================
   public boolean get(){
      return _value;
   }

   //============================================================
   // <T>设置数据内容。</T>
   //
   // @param value 布尔值
   //============================================================
   public void set(boolean value){
      _value = value;
   }

   //============================================================
   // <T>以整数方式设置数据内容。</T>
   //
   // @param value 整数
   //============================================================
   public void set(int value){
      _value = RBoolean.parse(value);
   }

   //============================================================
   // <T>以字符串方式设置数据内容。</T>
   //
   // @param value 字符串
   //============================================================
   public void set(String value){
      _value = RBoolean.parse(value);
   }

   //============================================================
   // <T>以字符串方式，获得数据内容。</T>
   //
   // @return 字符串
   //============================================================
   @Override
   public String toString(){
      return RBoolean.toString(_value);
   }
}
